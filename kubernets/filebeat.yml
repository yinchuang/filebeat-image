---
    kind: ConfigMap
    apiVersion: v1
    metadata:
      namespace: custom
      name: nginx
    data:
      nginx.conf: |
        user nginx;
        worker_processes auto;
        error_log /var/log/nginx/error.log;
        pid /run/nginx.pid;
        
        include /usr/share/nginx/modules/*.conf;
        
        events {
            worker_connections 10240;
        }
        
        http {
            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';
        
            access_log  /var/log/nginx/access.log  main;
        
            sendfile            on;
            tcp_nopush          on;
            tcp_nodelay         on;
            keepalive_timeout   65;
            types_hash_max_size 2048;
        
            include             /etc/nginx/mime.types;
            default_type        application/octet-stream;
    
            gzip on;
            gzip_comp_level 2;
            gzip_proxied any;
            gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    
            server_tokens off; 
        
            include /etc/nginx/conf.d/*.conf;
        
            server {
                listen       80 default_server;
                listen       [::]:80 default_server;
                server_name  _;
                client_max_body_size 300m;
                root         /usr/share/nginx/html;
        
                include /etc/nginx/default.d/*.conf;
        
                location / {
                    root   /opt/ss-web;
                    index  index.html;
                    try_files $uri $uri/ /index.html;
                }
    
                error_page 404 /404.html;
                    location = /40x.html {
                }
        
                error_page 500 502 503 504 /50x.html;
                    location = /50x.html {
                }
            }
        
        }
      filebeat.yml: |
        filebeat.inputs:
        - type: log
          enabled: true
          paths:
            - /var/log/nginx/*.log
        setup.ilm.enabled: false
        setup.template:
          name: "filebeat"
          pattern: "filebeat-*"
        output.elasticsearch:
          hosts: ["elasticsearch.xxx.xxx:9200"]
          index: "custom-%{+yyyy.MM.dd}"    
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: ss-web
      namespace: custom
      labels:
        app: nginx
    spec:
      ports:
        - name: nginx
          protocol: TCP
          port: 80
          targetPort: 80
      selector:
        app: nginx
      type: ClusterIP
    
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
      namespace: custom
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: nginx
      template:
        metadata:
          labels:
            app: nginx
        spec:
          volumes:
            - name: nginx
              configMap:
                name: nginx
                items:
                  - key: nginx.conf
                    path: nginx.conf
                  - key: filebeat.yml 
                    path: filebeat.yml
            - name: app-logs
              emptyDir: {}
          containers:
            - name: filebeat
              image: xxx.xxx.xxx/filebeat:7.5.1                              ###通过docker目录创建自己的filebeat镜像
              imagePullPolicy: Always
              volumeMounts:
                - name: ss-web
                  mountPath: /opt/filebeat-7.5.1-linux-x86_64/filebeat.yml
                  subPath: filebeat.yml
                - name: app-logs
                  mountPath: /var/log/nginx
                  readOnly: true
              resources:
                requests:
                  memory: "20Mi"
                  cpu: "25m"
                limits:
                  memory: "30Mi"
                  cpu: "50m"
            - name: ss-web
              image: xxx.xxx.xxx/nginx:1.16.1                                 ###因为习惯centos，就自己用centos做个nginx镜像
              imagePullPolicy: Always 
              ports:
                - protocol: TCP
                  containerPort: 80
              volumeMounts:
                - name: ss-web
                  mountPath: /etc/nginx/nginx.conf
                  subPath: nginx.conf
                - name: app-logs
                  mountPath: /var/log/nginx
              resources:
                requests:
                  memory: "100Mi"
                  cpu: "50m"
                limits:
                  memory: "512Mi"
                  cpu: "500m"
          imagePullSecrets:                                                   ###根据云服务商，自行创建
            - name: aliyun
          dnsPolicy: ClusterFirst
          restartPolicy: Always
    ---
    